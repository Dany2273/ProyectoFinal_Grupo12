/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Enums.TipoCliente;
import static Vistas.Menu.Escritorio;
import accesoDatos.ClienteData;
import entidades.Cliente;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Compaq
 */
public class ModificarCliente extends javax.swing.JInternalFrame {

    Cliente cli = new Cliente();
    ClienteData cData = new ClienteData();

    public ModificarCliente() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel(){
            ImageIcon icon = new ImageIcon(getClass().getResource("/Iconos/61911071.jpg"));
            Image image = icon.getImage();
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jGuardar = new javax.swing.JButton();
        jnombre = new javax.swing.JTextField();
        jdni = new javax.swing.JTextField();
        jdomicilio = new javax.swing.JTextField();
        jcp = new javax.swing.JTextField();
        jtrabajo = new javax.swing.JTextField();
        jtelefono = new javax.swing.JTextField();
        jmail = new javax.swing.JTextField();
        jcuil = new javax.swing.JTextField();
        jciudad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jltipo = new javax.swing.JLabel();

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre:");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CUIL/CUIT:");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DNI:");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Domicilio:");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ciudad:");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("C:P::");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Trabajo:");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Telefono::");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("E-Mail:");

        jGuardar.setText("Guardar");
        jGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGuardarActionPerformed(evt);
            }
        });

        jcp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcpActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Modificar Datos.");

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Tipo Cliente:");

        jltipo.setBackground(new java.awt.Color(255, 255, 255));
        jltipo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jltipo.setForeground(new java.awt.Color(255, 255, 255));
        jltipo.setMaximumSize(new java.awt.Dimension(10, 10));
        jltipo.setMinimumSize(new java.awt.Dimension(10, 10));
        jltipo.setPreferredSize(new java.awt.Dimension(10, 10));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(81, 81, 81))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jltipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jnombre)
                                .addComponent(jdni, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jcuil, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addGap(22, 22, 22))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addGap(37, 37, 37)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(59, 59, 59)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(34, 34, 34)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(20, 20, 20)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(43, 43, 43)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jGuardar)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtelefono)
                                    .addComponent(jdomicilio)
                                    .addComponent(jcp)
                                    .addComponent(jtrabajo)
                                    .addComponent(jmail)
                                    .addComponent(jciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jltipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcuil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jdni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jdomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jciudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtrabajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jGuardar)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGuardarActionPerformed
        // TODO add your handling code here:
        if (jnombre.getText().equals("") && jcuil.getText().equals("") && jdni.getText().equals("") && jdomicilio.getText().equals("")
                && jciudad.getText().equals("") && jcp.getText().equals("") && jtrabajo.getText().equals("")
                && jtelefono.getText().equals("") && jmail.getText().equals("")) {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor, complete todos los campos obligatorios:\n- Nombre\n- Cuil/Cuit\n- DNI\n- Domicilio\n- Ciudad\n"
                    + "- Codigo Postal\n- Trabajo\n- Telefono\n- Mail",
                    "Campos Incompletos",
                    JOptionPane.ERROR_MESSAGE
            );
        } else if (jcuil.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo CUIL/CUIT se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (jdni.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo DNI se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (jnombre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo Nombre se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (jdomicilio.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo Domicilio se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (jciudad.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo Ciudad se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (jcp.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo C.P. se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (jtrabajo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo Trabajo se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (jtelefono.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo Telefono se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (jmail.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo E-Mail se encuentra vacio!!.", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!jnombre.getText().matches("^[\\p{L} ]+$")) {
            JOptionPane.showMessageDialog(null, "Ingrese un Nombre válido! (solo letras y espacios).", "Error en el Nombre", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!jdomicilio.getText().matches("^[\\p{L} \\p{N}]+$")) {
            JOptionPane.showMessageDialog(null, "Ingrese un Domicilio válido! (solo letras, numeros y espacios).", "Error en el Domicilio", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!jdni.getText().matches("[0-9]+")) {
            JOptionPane.showMessageDialog(null, "Ingrese un DNI válido! (solo números).", "Error en el DNI", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!jcuil.getText().matches("[0-9]+")) {
            JOptionPane.showMessageDialog(null, "Ingrese un Cuil/Cuit válido! (solo números).", "Error en el Cuil/Cuit", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!jciudad.getText().matches("^[\\p{L} ]+$")) {
            JOptionPane.showMessageDialog(null, "Ingrese una Ciudad válida! (solo letras y espacios).", "Error en Ciudad", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!jcp.getText().matches("[0-9]+")) {
            JOptionPane.showMessageDialog(null, "Ingrese un Codigo Postal válido! (solo numeros).", "Error en el Código Postal", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!jtrabajo.getText().matches("^[\\p{L} .]+$")) {
            JOptionPane.showMessageDialog(null, "Ingrese un Trabajo válido! (solo letras, espacios y puntos).", "Error en Trabajo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!jtelefono.getText().matches("[0-9]+")) {
            JOptionPane.showMessageDialog(null, "Ingrese un Teléfono válido! (solo numeros).", "Error en el Telefono", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (jdni.getText().length() > 8) {
            JOptionPane.showMessageDialog(null, "La cantidad de digitos ingresados en DNI exede el limite permitido(8).");
        }

        int resp = JOptionPane.showConfirmDialog(null, "¿Desea guardar los datos ingresados?", "Atención!",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (resp == 0) {
            procesarSeleccion();
        }


    }//GEN-LAST:event_jGuardarActionPerformed

    private void jcpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jciudad;
    private javax.swing.JTextField jcp;
    private javax.swing.JTextField jcuil;
    private javax.swing.JTextField jdni;
    private javax.swing.JTextField jdomicilio;
    private javax.swing.JLabel jltipo;
    private javax.swing.JTextField jmail;
    private javax.swing.JTextField jnombre;
    private javax.swing.JTextField jtelefono;
    private javax.swing.JTextField jtrabajo;
    // End of variables declaration//GEN-END:variables

    // Método para establecer el valor en el JTextField
    public void setTextFieldValue(String nombre, long cuil, int dni, String trabajo, String domicilio,
            String ciudad, String cp, String telefono, String mail) {//Aca recibe los datos de la tabla

        jnombre.setText(nombre);
        jcuil.setText((String.valueOf(cuil)));
        jdni.setText((String.valueOf(dni)));
        jtrabajo.setText(trabajo);
        jdomicilio.setText(domicilio);
        jciudad.setText(ciudad);
        jcp.setText(cp);
        jtelefono.setText(telefono);
        jmail.setText(mail);

    }

    private DatosClientes obtenerDatosFrame() {
        JInternalFrame[] frames = getDesktopPane().getAllFrames();
        for (JInternalFrame frame : frames) {
            if (frame instanceof DatosClientes) {
                return (DatosClientes) frame;
            }
        }
        return null; // Devuelve null si no se encuentra el frame "DatosClientes"
    }

    private void procesarSeleccion() {
        DatosClientes datosClientes = obtenerDatosFrame();

        if (datosClientes != null) {
            DefaultTableModel modelo = datosClientes.modelo; // Suponiendo que tiene un método getTableModel() en DatosClientes
            int fila = datosClientes.getSelectedRow(); // Suponiendo que tiene un método para obtener la fila seleccionada en DatosClientes
            if (fila != -1) {
                Long valor = (Long) modelo.getValueAt(fila, 1); // Obtener el valor como Long
                long cuil = valor.longValue();
                Cliente cliente = new Cliente();
                cliente = cData.buscarClientePorCuilCuit(cuil);

                System.out.println(cliente.getTipo());

                if (cliente.getTipo().equals(TipoCliente.PERSONA_FISICA)) {

                    cliente.setNombre(jnombre.getText());
                    cliente.setCuilCuit(Long.parseLong(jcuil.getText()));
                    cliente.setDni(Integer.parseInt(jdni.getText()));
                    cliente.setCiudad(jciudad.getText());
                    cliente.setCodigoPostal(jcp.getText());
                    cliente.setDomicilio(jdomicilio.getText());
                    cliente.setLugarTrabajo(jtrabajo.getText());
                    cliente.setMail(jmail.getText());
                    cliente.setTelefono(jtelefono.getText());

                    cData.modificarClienteFisico(cliente);

                    // Actualiza los datos en el modelo de la tabla
                    if (fila != -1) {
                        String d, cony;
                        String est = cliente.isEstado() ? "Activo/a" : "Inactivo/a";
                        modelo.setValueAt(cliente.getNombre(), fila, 0); // Actualiza el nombre
                        modelo.setValueAt(cliente.getCuilCuit(), fila, 1); // Actualiza el apellido
                        if (cliente.getDni() == 0) {
                            d = "N/A.";
                            modelo.setValueAt(d, fila, 2); // Actualiza el DNI como nulo
                        } else {

                            modelo.setValueAt(cliente.getDni(), fila, 2); // Actualiza el DNI
                        }
                        if (cliente.getConyugue() == null) {
                            cony = "N/A.";
                            modelo.setValueAt(cony, fila, 3); // Actualiza conyugue si es nulo
                        } else {
                            modelo.setValueAt(cliente.getConyugue(), fila, 3); // Actualiza conyugue
                        }

                        modelo.setValueAt(cliente.getLugarTrabajo(), fila, 4); // Actualiza lugar de trabajo
                        modelo.setValueAt(cliente.getDomicilio(), fila, 5); // Actualiza domicilio
                        modelo.setValueAt(cliente.getCiudad(), fila, 6); // Actualiza ciudad
                        modelo.setValueAt(cliente.getCodigoPostal(), fila, 7); // Actualiza codigo postal
                        modelo.setValueAt(cliente.getTelefono(), fila, 8); // Actualiza telefono
                        modelo.setValueAt(cliente.getMail(), fila, 9); // Actualiza mail
                        modelo.setValueAt(est, fila, 10); // Actualiza el estado

                    }

//// Notifica a la tabla que los datos han cambiado
                    modelo.fireTableDataChanged();

                } else if (cliente.getTipo().equals(TipoCliente.PERSONA_JURIDICA)) {

                    cliente.setNombre(jnombre.getText());
                    cliente.setCuilCuit(Long.parseLong(jcuil.getText()));
                    cliente.setCiudad(jciudad.getText());
                    cliente.setCodigoPostal(jcp.getText());
                    cliente.setDomicilio(jdomicilio.getText());
                    cliente.setLugarTrabajo(jtrabajo.getText());
                    cliente.setMail(jmail.getText());
                    cliente.setTelefono(jtelefono.getText());

                    cData.modificarClienteJuridico(cliente);

                    // Actualiza los datos en el modelo de la tabla
                    if (fila != -1) {
                        String d, cony;
                        String est = cliente.isEstado() ? "Activo/a" : "Inactivo/a";
                        modelo.setValueAt(cliente.getNombre(), fila, 0); // Actualiza el nombre
                        modelo.setValueAt(cliente.getCuilCuit(), fila, 1); // Actualiza el apellido
                        if (cliente.getDni() == 0) {
                            d = "N/A.";
                            modelo.setValueAt(d, fila, 2); // Actualiza el DNI como nulo
                        } else {

                            modelo.setValueAt(cliente.getDni(), fila, 2); // Actualiza el DNI
                        }
                        if (cliente.getConyugue() == null) {
                            cony = "N/A.";
                            modelo.setValueAt(cony, fila, 3); // Actualiza conyugue si es nulo
                        } else {
                            modelo.setValueAt(cliente.getConyugue(), fila, 3); // Actualiza conyugue
                        }

                        modelo.setValueAt(cliente.getLugarTrabajo(), fila, 4); // Actualiza lugar de trabajo
                        modelo.setValueAt(cliente.getDomicilio(), fila, 5); // Actualiza domicilio
                        modelo.setValueAt(cliente.getCiudad(), fila, 6); // Actualiza ciudad
                        modelo.setValueAt(cliente.getCodigoPostal(), fila, 7); // Actualiza codigo postal
                        modelo.setValueAt(cliente.getTelefono(), fila, 8); // Actualiza telefono
                        modelo.setValueAt(cliente.getMail(), fila, 9); // Actualiza mail
                        modelo.setValueAt(est, fila, 10); // Actualiza el estado

                    }

//// Notifica a la tabla que los datos han cambiado
                    modelo.fireTableDataChanged();
                } else {
                    JOptionPane.showMessageDialog(null, "No se selecciono ninguna fila.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se puede acceder a Datos Clientes.");
            }

        }
    }
//De esta manera, el método procesarSeleccion() se encargará de buscar el JInternalFrame "DatosClientes" 
//y realizar las operaciones necesarias con los datos, y el método obtenerDatosFrame() se encargará 
//de obtener la referencia al "DatosClientes". Esto mejora la modularidad y la claridad de tu código.
}
